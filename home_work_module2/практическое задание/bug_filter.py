"""
### **9. Фильтрация баг-репортов**
**Цель:**
Научиться работать со списками и фильтровать данные по условиям.
**Задание:**
Напишите программу, которая:
1. Создает список из 7 баг-репортов (пример: `"Ошибка 1 – High"`, `"Ошибка 2 – Medium"`).
2. Запрашивает у пользователя приоритет (`High`, `Medium` или `Low`).
3. Выводит только баги с указанным приоритетом.
4. Если таких багов нет, программа сообщает об этом.
**Пример работы:**
Введите приоритет для поиска (High, Medium, Low): High
Найденные баги:
- Ошибка 1 – High
- Ошибка 5 – High

**Результат:**

Программа `bug_filter.py`, которая фильтрует баг-репорты по приоритету.
"""

bug_list = [
"Ошибка 1 – Low", "Ошибка 2 – Medium", "Ошибка 3 – High", "Ошибка 4 – High",
"Ошибка 5 – High", "Ошибка 6 – Low", "Ошибка 7 – Medium"
]

priority_list = ['high', 'medium', 'low']
rq = input('Введите приоритет для поиска (High, Medium, Low):')
counter = 0

if rq:
    for i in bug_list:
        if rq.lower() in i.lower() and rq.lower() in priority_list:
            print(f'- {i}')
            counter += 1
    if not counter:
            print('По данному фильтру дефекты отсутствуют.')
else:
    print('Ошибка! Пустой запрос.')



